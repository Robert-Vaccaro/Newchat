{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Biggi\\\\Documents\\\\Codin\\\\Think-React\\\\newchat\\\\src\\\\ChatScreen.js\";\nimport React, { Component } from 'react';\nimport Chatkit from '@pusher/chatkit-client';\n\nclass ChatScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {}\n    };\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: 'YOUR INSTANCE LOCATOR',\n      userId: this.props.currentUsername,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: 'http://localhost:3001/authenticate'\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser\n      });\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    const styles = {\n      container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      chatContainer: {\n        display: 'flex',\n        flex: 1\n      },\n      whosOnlineListContainer: {\n        width: '300px',\n        flex: 'none',\n        padding: 20,\n        backgroundColor: '#2c303b',\n        color: 'white'\n      },\n      chatListContainer: {\n        padding: 20,\n        width: '85%',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    };\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.chatContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      style: styles.whosOnlineListContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Who's online PLACEHOLDER\")), React.createElement(\"section\", {\n      style: styles.chatListContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Chat PLACEHOLDER\"))));\n  }\n\n}\n\nexport default ChatScreen;","map":{"version":3,"sources":["C:\\Users\\Biggi\\Documents\\Codin\\Think-React\\newchat\\src\\ChatScreen.js"],"names":["React","Component","Chatkit","ChatScreen","constructor","props","state","currentUser","componentDidMount","chatManager","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","setState","catch","error","console","render","styles","container","height","display","flexDirection","chatContainer","flex","whosOnlineListContainer","width","padding","backgroundColor","color","chatListContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,WAAW,GAAG,IAAIP,OAAO,CAACQ,WAAZ,CAAwB;AAC1CC,MAAAA,eAAe,EAAE,uBADyB;AAE1CC,MAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,eAFuB;AAG1CC,MAAAA,aAAa,EAAE,IAAIZ,OAAO,CAACa,aAAZ,CAA0B;AACvCC,QAAAA,GAAG,EAAE;AADkC,OAA1B;AAH2B,KAAxB,CAApB;AAQAP,IAAAA,WAAW,CACRQ,OADH,GAEGC,IAFH,CAEQX,WAAW,IAAI;AACnB,WAAKY,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAJH,EAKGa,KALH,CAKSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CALlB;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG;AACbC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,OADC;AAETC,QAAAA,OAAO,EAAE,MAFA;AAGTC,QAAAA,aAAa,EAAE;AAHN,OADE;AAMbC,MAAAA,aAAa,EAAE;AACbF,QAAAA,OAAO,EAAE,MADI;AAEbG,QAAAA,IAAI,EAAE;AAFO,OANF;AAUbC,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,KAAK,EAAE,OADgB;AAEvBF,QAAAA,IAAI,EAAE,MAFiB;AAGvBG,QAAAA,OAAO,EAAE,EAHc;AAIvBC,QAAAA,eAAe,EAAE,SAJM;AAKvBC,QAAAA,KAAK,EAAE;AALgB,OAVZ;AAiBbC,MAAAA,iBAAiB,EAAE;AACjBH,QAAAA,OAAO,EAAE,EADQ;AAEjBD,QAAAA,KAAK,EAAE,KAFU;AAGjBL,QAAAA,OAAO,EAAE,MAHQ;AAIjBC,QAAAA,aAAa,EAAE;AAJE;AAjBN,KAAf;AAyBA,WACE;AAAK,MAAA,KAAK,EAAEJ,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAED,MAAM,CAACK,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAEL,MAAM,CAACO,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,EAIE;AAAS,MAAA,KAAK,EAAEP,MAAM,CAACY,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAJF,CADF,CADF;AAYD;;AA/DgC;;AAkEnC,eAAejC,UAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Chatkit from '@pusher/chatkit-client'\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentUser: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'YOUR INSTANCE LOCATOR',\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:3001/authenticate',\r\n      }),\r\n    })\r\n\r\n    chatManager\r\n      .connect()\r\n      .then(currentUser => {\r\n        this.setState({ currentUser })\r\n      })\r\n      .catch(error => console.error('error', error))\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      container: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      chatContainer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n      },\r\n      whosOnlineListContainer: {\r\n        width: '300px',\r\n        flex: 'none',\r\n        padding: 20,\r\n        backgroundColor: '#2c303b',\r\n        color: 'white',\r\n      },\r\n      chatListContainer: {\r\n        padding: 20,\r\n        width: '85%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n   }\r\n\r\n    return (\r\n      <div style={styles.container}>\r\n        <div style={styles.chatContainer}>\r\n          <aside style={styles.whosOnlineListContainer}>\r\n            <h2>Who's online PLACEHOLDER</h2>\r\n          </aside>\r\n          <section style={styles.chatListContainer}>\r\n            <h2>Chat PLACEHOLDER</h2>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatScreen"]},"metadata":{},"sourceType":"module"}