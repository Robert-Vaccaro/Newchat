{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Biggi\\\\Documents\\\\Codin\\\\Think-React\\\\newchat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Biggi\\\\Documents\\\\Codin\\\\Think-React\\\\newchat\\\\src\\\\components\\\\MessageList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nclass MessagesList extends Component {\n  render() {\n    const styles = {\n      container: {\n        overflowY: 'scroll',\n        flex: 1\n      },\n      ul: {\n        listStyle: 'none'\n      },\n      li: {\n        marginTop: 13,\n        marginBottom: 13\n      },\n      senderUsername: {\n        fontWeight: 'bold'\n      },\n      message: {\n        fontSize: 15\n      }\n    };\n    return React.createElement(\"div\", {\n      style: _objectSpread({}, this.props.style, {}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: styles.ul,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.messages.map((message, index) => React.createElement(\"li\", {\n      key: index,\n      style: styles.li,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: styles.senderUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, message.senderId), ' '), React.createElement(\"p\", {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, message.text)))));\n  }\n\n}\n\nexport default MessagesList;","map":{"version":3,"sources":["C:\\Users\\Biggi\\Documents\\Codin\\Think-React\\newchat\\src\\components\\MessageList.js"],"names":["React","Component","MessagesList","render","styles","container","overflowY","flex","ul","listStyle","li","marginTop","marginBottom","senderUsername","fontWeight","message","fontSize","props","style","messages","map","index","senderId","text"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACrCE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG;AACfC,MAAAA,SAAS,EAAE;AACPC,QAAAA,SAAS,EAAE,QADJ;AAEPC,QAAAA,IAAI,EAAE;AAFC,OADI;AAKfC,MAAAA,EAAE,EAAE;AACAC,QAAAA,SAAS,EAAE;AADX,OALW;AAQfC,MAAAA,EAAE,EAAE;AACAC,QAAAA,SAAS,EAAE,EADX;AAEAC,QAAAA,YAAY,EAAE;AAFd,OARW;AAYfC,MAAAA,cAAc,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA,OAZD;AAefC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAfM,KAAf;AAiBA,WACA;AACI,MAAA,KAAK,oBACF,KAAKC,KAAL,CAAWC,KADT,MAEFd,MAAM,CAACC,SAFL,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAI,MAAA,KAAK,EAAED,MAAM,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKS,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAwB,CAACL,OAAD,EAAUM,KAAV,KACrB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,KAAK,EAAEjB,MAAM,CAACM,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACS,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCE,OAAO,CAACO,QAA7C,CADJ,EACkE,GADlE,CADA,EAIA;AAAG,MAAA,KAAK,EAAElB,MAAM,CAACW,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,OAAO,CAACQ,IAAnC,CAJA,CADH,CADD,CANJ,CADA;AAmBH;;AAtCoC;;AAyCrC,eAAerB,YAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass MessagesList extends Component {\r\nrender() {\r\n    const styles = {\r\n    container: {\r\n        overflowY: 'scroll',\r\n        flex: 1,\r\n    },\r\n    ul: {\r\n        listStyle: 'none',\r\n    },\r\n    li: {\r\n        marginTop: 13,\r\n        marginBottom: 13,\r\n    },\r\n    senderUsername: {\r\n        fontWeight: 'bold',\r\n    },\r\n    message: { fontSize: 15 },\r\n    }\r\n    return (\r\n    <div\r\n        style={{\r\n        ...this.props.style,\r\n        ...styles.container,\r\n        }}\r\n    >\r\n        <ul style={styles.ul}>\r\n        {this.props.messages.map((message, index) => (\r\n            <li key={index} style={styles.li}>\r\n            <div>\r\n                <span style={styles.senderUsername}>{message.senderId}</span>{' '}\r\n            </div>\r\n            <p style={styles.message}>{message.text}</p>\r\n            </li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default MessagesList"]},"metadata":{},"sourceType":"module"}