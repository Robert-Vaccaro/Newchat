{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Biggi\\\\Documents\\\\Codin\\\\Think-React\\\\newchat\\\\src\\\\ChatScreen.js\";\nimport React, { Component } from 'react';\nimport Chatkit from '@pusher/chatkit-client';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport TypingIndicator from './components/TypingIndicator';\nimport WhosOnlineList from './components/WhosOnlineList';\n\nclass ChatScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {},\n      currentRoom: {},\n      messages: [],\n      usersWhoAreTyping: []\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.sendTypingEvent = this.sendTypingEvent.bind(this);\n  }\n\n  sendMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    });\n  }\n\n  comonentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: 'v1:us1:4c538e9c-9cb6-452d-8565-986bea95aafe',\n      userId: this.props.currentUsername,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: 'http://localhost:3000/authenticate'\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: '9602717c-c3b1-4006-a29c-13becb78c874',\n        messageLimit: 100,\n        hooks: {\n          newMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          },\n          userStartedTyping: user => {\n            this.setState({\n              usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name]\n            });\n          },\n          userStoppedTyping: user => {\n            this.setState({\n              usersWhoAreTyping: this.state.usersWhoAreTyping.filter(username => username !== user.name)\n            });\n          },\n          onPresenceChange: () => this.forceUpdate()\n        }\n      });\n    }).then(currentRoom => {\n      this.setState({\n        currentRoom\n      });\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    const styles = {\n      container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      chatContainer: {\n        display: 'flex',\n        flex: 1\n      },\n      whosOnlineListContainer: {\n        width: '300px',\n        flex: 'none',\n        padding: 20,\n        backgroundColor: '#2c303b',\n        color: 'white'\n      },\n      chatListContainer: {\n        padding: 20,\n        width: '85%',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    };\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Chatly\")), React.createElement(\"div\", {\n      style: styles.chatContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      style: styles.whosOnlineListContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(WhosOnlineList, {\n      currentUser: this.state.currentUser,\n      users: this.state.currentRoom.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      style: styles.chatListContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      messages: this.state.messages,\n      style: styles.chatList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(TypingIndicator, {\n      usersWhoAreTyping: this.state.usersWhoAreTyping,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(SendMessageForm, {\n      onSubmit: this.sendMessage,\n      onChange: this.sendTypingEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ChatScreen;","map":{"version":3,"sources":["C:\\Users\\Biggi\\Documents\\Codin\\Think-React\\newchat\\src\\ChatScreen.js"],"names":["React","Component","Chatkit","MessageList","SendMessageForm","TypingIndicator","WhosOnlineList","ChatScreen","constructor","props","state","currentUser","currentRoom","messages","usersWhoAreTyping","sendMessage","bind","sendTypingEvent","text","roomId","id","comonentDidMount","chatManager","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","setState","subscribeToRoom","messageLimit","hooks","newMessage","message","userStartedTyping","user","name","userStoppedTyping","filter","username","onPresenceChange","forceUpdate","catch","error","console","render","styles","container","height","display","flexDirection","chatContainer","flex","whosOnlineListContainer","width","padding","backgroundColor","color","chatListContainer","header","users","chatList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Chatkit from '@pusher/chatkit-client'\r\nimport MessageList from './components/MessageList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport TypingIndicator from './components/TypingIndicator'\r\nimport WhosOnlineList from './components/WhosOnlineList'\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentUser: {},\r\n      currentRoom: {},\r\n      messages: [],\r\n      usersWhoAreTyping: [],\r\n    }\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.sendTypingEvent = this.sendTypingEvent.bind(this)\r\n  }\r\n\r\n\r\n   sendMessage(text) {\r\n    this.state.currentUser.sendMessage({\r\n      text,\r\n      roomId: this.state.currentRoom.id,\r\n    })\r\n  }\r\n\r\n  comonentDidMount() {\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:4c538e9c-9cb6-452d-8565-986bea95aafe',\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:3000/authenticate',\r\n      }),\r\n    })\r\n\r\n    chatManager\r\n      .connect()\r\n      .then(currentUser => {\r\n        this.setState({ currentUser })\r\n        return currentUser.subscribeToRoom({\r\n          roomId: '9602717c-c3b1-4006-a29c-13becb78c874',\r\n          messageLimit: 100,\r\n          hooks: {\r\n            newMessage: message => {\r\n              this.setState({\r\n                messages: [...this.state.messages, message],\r\n              })\r\n            },\r\n            userStartedTyping: user => {\r\n              this.setState({\r\n                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\r\n              })\r\n            },\r\n            userStoppedTyping: user => {\r\n              this.setState({\r\n                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                  username => username !== user.name\r\n                ),\r\n              })\r\n            },\r\n            onPresenceChange: () => this.forceUpdate(),\r\n          },\r\n        })\r\n      })\r\n      .then(currentRoom => {\r\n        this.setState({ currentRoom })\r\n      })\r\n      .catch(error => console.error('error', error))\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      container: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      chatContainer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n      },\r\n      whosOnlineListContainer: {\r\n        width: '300px',\r\n        flex: 'none',\r\n        padding: 20,\r\n        backgroundColor: '#2c303b',\r\n        color: 'white',\r\n      },\r\n      chatListContainer: {\r\n        padding: 20,\r\n        width: '85%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n   }\r\n    return (\r\n      <div style={styles.container}>\r\n        <header style={styles.header}>\r\n          <h2>Chatly</h2>\r\n        </header>\r\n        <div style={styles.chatContainer}>\r\n          <aside style={styles.whosOnlineListContainer}>\r\n            <WhosOnlineList\r\n              currentUser={this.state.currentUser}\r\n              users={this.state.currentRoom.users}\r\n            />\r\n          </aside>\r\n          <section style={styles.chatListContainer}>\r\n            <MessageList\r\n              messages={this.state.messages}\r\n              style={styles.chatList}\r\n            />\r\n            <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\r\n            <SendMessageForm\r\n              onSubmit={this.sendMessage}\r\n              onChange={this.sendTypingEvent}\r\n            />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatScreen"]},"metadata":{},"sourceType":"module"}